<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - My New Hugo Site</title>
        <link>http://example.org/posts/</link>
        <description>All Posts | My New Hugo Site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 30 Jul 2022 16:09:06 &#43;0800</lastBuildDate><atom:link href="http://example.org/posts/" rel="self" type="application/rss+xml" /><item>
    <title>八月目标</title>
    <link>http://example.org/posts/%E5%85%AB%E6%9C%88%E7%9B%AE%E6%A0%87/</link>
    <pubDate>Sat, 30 Jul 2022 16:09:06 &#43;0800</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/posts/%E5%85%AB%E6%9C%88%E7%9B%AE%E6%A0%87/</guid>
    <description><![CDATA[朱哥问题总结： 一、键盘打字太慢 二、git操作不够熟练 三、Linux系统操作需要熟练 四、mybatis源码需要掌握 五、Java需要从0-1进行掌握 六、服务架构需要仔细掌握 七、数据库的掌握
八月计划： 第一周： 总目标：键盘打字、git操作、Java从0-2掌握、Linux系统的下载安装及操作 第二周： 总目标：数据库学习、mybatis源码分析、Java从2-4 第三周： 总目标：服务架构的了解、mybatis源码分析、Java丛4-6 第四周： 总目标：实践Java、git以及相关服务架构、mybatis源码分析]]></description>
</item>
<item>
    <title>线程池</title>
    <link>http://example.org/posts/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link>
    <pubDate>Sat, 30 Jul 2022 16:08:25 &#43;0800</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/posts/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>ThreadLocal</title>
    <link>http://example.org/posts/threadlocal/</link>
    <pubDate>Sat, 30 Jul 2022 16:07:36 &#43;0800</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/posts/threadlocal/</guid>
    <description><![CDATA[ThreadLocal 一、WHAT
​	ThreadLocal类用来提供线程内部的局部变量，不同的线程之间不会干扰；这种变量在多线程环境下访问时能保证各个线程的变量相互独立于其他线程内的变量；在线程的生命周期内起作用，可以减少同一个线程内多个函数或组件之间的一些公共变量传递的复杂性。 ​	get():获取当前线程绑定的变量 ​	1.首先获取当前线程，根据当前线程获取一个Map ​	2.如果获取的Map不为空，则在Map中以ThreadLocal的引用作为key来在Map中获取对应的Entry e，否则转到4； ​	3.如果e不为null，则返回e.value，否则转到4 ​	4.Map为空或者e为空，则通过initialValue函数获取初始值value，然后用ThreadLocal的引用和value作为key和value创建一个新的Map ​	set():将变量绑定到当前线程中 ​	1.首先获取当前线程，并根据当前线程获取一个Map ​	2.如果获取的Map不为空，则将参数设置到Map中（当前ThreadLocal的引用作为key） ​	3.如果Map为空，则给该线程创建Map，并设置初始值 ​	remove():移除当前线程绑定的局部变量，该方法可以帮助JVM进行GC ​	initialValue():返回当前线程局部变量的初始值
1.threaLocal和synchronized的区别 synchronized： 1.以时间换空间的方式，只提供一份变量让不同线程访问 2.多个线程之间访问资源的同步 ThreadLocal： 1.以空间换时间的方式，为每个变量提供一份变量副本 2.多线程中让每个线程之间的相互隔离 2.ThreadLocal的内部结构 Thread维护了一个ThreadLocalMap，其中key值为ThreadLocal，value值为实际变量副本值
二、WHY 1.每个线程需要有自己单独的实例 2.实力需要在多个方法中共享，但不希望被多线程共享]]></description>
</item>
<item>
    <title>HashMap</title>
    <link>http://example.org/posts/hashmap/</link>
    <pubDate>Sat, 30 Jul 2022 16:06:47 &#43;0800</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/posts/hashmap/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>First_post</title>
    <link>http://example.org/posts/first_post/</link>
    <pubDate>Sat, 30 Jul 2022 15:02:18 &#43;0800</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/posts/first_post/</guid>
    <description><![CDATA[hello world]]></description>
</item>
</channel>
</rss>
